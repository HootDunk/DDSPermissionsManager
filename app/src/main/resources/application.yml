micronaut:
  application:
    name: "DDS Permissions Manager"
---
netty:
  default:
    allocator:
      max-order: 3
---
micronaut:
  views:
    freemarker:
      default-extension: "ftlx"
---
micronaut:
  server:
    cors:
      enabled: true
      configurations:
        allowedOrigins:
          - http://localhost:3000
          - localhost:3000
  security:
    token:
      refresh:
        cookie:
          cookie-path: /
          cookie-max-age: 1d
      jwt:
        signatures:
          secret:
            generator:
              secret: pleaseChangeThisSecretForANewOne
              jws-algorithm: HS256
        generator:
          refresh-token:
            secret: pleaseChangeThisSecretForANewOneRefresh
        cookie:
          cookie-max-age: 1h
    # redirect:
    #   login-success: http://localhost:3000
    #   login-failure: http://localhost:3000/failed-auth
    #   logout: http://localhost:3000
    # If hosting the frontend in micronaut
    redirect:
      login-success: http://localhost:8080
      login-failure: http://localhost:8080/failed-auth
      logout: http://localhost:8080
    authentication: cookie
    oauth2:
      login-uri: "/api/oauth/login{/provider}"
      callback-uri: "/api/oauth/callback{/provider}"
      clients:
        google:
          client-id: ***REMOVED***
          client-secret: ***REMOVED***
          openid:
            authorization:
              prompt: select_account
            issuer: "https://accounts.google.com"
    endpoints:
      introspection:
        path: /api/token_info
      logout:
        path: /api/logout
        get-allowed: true
      login:
        path: /api/login
      oauth:
        path: /api/oauth/access_token
    intercept-url-map:
      - pattern: /favicon.ico
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /login-failed.html
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /info
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /assets/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /swagger-ui/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /swagger/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /**
        http-method: GET
        access:
          - isAnonymous()
---
datasources:
  default:
    url: ${DPM_JDBC_URL:`jdbc:h2:mem:devDb;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE;IGNORECASE=TRUE`}
    driverClassName: ${DPM_JDBC_DRIVER:org.h2.Driver}
    username: ${DPM_JDBC_USER:sa}
    password: ${DPM_JDBC_PASSWORD:""}
jpa:
  default:
    entity-scan:
      packages: "io.unityfoundation.dds.permissions.manager"
    properties:
      hibernate:
        hbm2ddl:
          auto: ${DPM_AUTO_SCHEMA_GEN:update}
---
micronaut:
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
      default:
        paths: classpath:public
        mapping: /**
        enabled: true
---
micronaut:
  endpoints:
    info:
      enabled: true
      sensitive: false
---
gcp:
  credentials:
    enabled: false
  project-id: replaceme
---
permissions-manager:
  application:
    grant-token:
      time-expiry: 48 # in hours
    client-certificate:
      time-expiry: 365 # in days
    permissions-file:
      time-expiry: 30 # in days
      domain: 1
    passphrase:
      length: 16
