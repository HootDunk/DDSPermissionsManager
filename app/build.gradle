plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id 'jacoco'
    id "com.gorylenko.gradle-git-properties" version "2.3.1"
    id("io.micronaut.application") version "3.7.3"
}

version = "0.1"
group = "io.unityfoundation"


repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.problem:micronaut-problem-json")
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("io.micronaut.security:micronaut-security-oauth2")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")

    implementation("at.favre.lib:bcrypt:0.9.0")
    implementation("org.bouncycastle:bcpkix-jdk18on:1.72")
    implementation("org.bouncycastle:bcmail-jdk18on:1.72")
    implementation("javax.mail:mail:1.5.0-b01")

    implementation("org.freemarker:freemarker:2.3.31")

    implementation("io.micronaut.gcp:micronaut-gcp-secret-manager")

    String databaseSelection = System.getenv("DPM_DATABASE_DEPENDENCY")
    if (databaseSelection != null) {
        databaseSelection.split(',').each {part ->
            runtimeOnly(part)
        }
    } else {
        runtimeOnly("com.h2database:h2")
    }
}


application {
    mainClass.set("io.unityfoundation.dds.permissions.manager.RunApplication")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("io.unityfoundation.dds.permissions.manager.*")
    }
}

tasks.withType(JavaCompile) {
    options.fork = true
    options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=rapidoc.enabled=true,swagger-ui.enabled=true,swagger-ui.theme=flattop'
}

tasks.register('copyClientResources', Copy) {
    dependsOn ':frontend:build'
    from "${project(':frontend').projectDir}/build"
    into "${project(':app').buildDir}/resources/main/public"
}

processResources {
    dependsOn 'copyClientResources'
}
